"""Initial data model migration

Revision ID: 71b6be49c9a1
Revises:
Create Date: 2023-08-16 08:11:47.807077

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "71b6be49c9a1"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    currency_table = op.create_table(
        "currency",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.CHAR(length=3), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("symbol", sa.CHAR(length=1), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("symbol"),
    )
    op.create_table(
        "security",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("symbol", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("exchange", sa.String(), nullable=False),
        sa.Column(
            "asset_type",
            sa.Enum("stock", "etf", "trust", name="assettype"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("active", "delisted", name="securitystatus"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("security", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_security_symbol"), ["symbol"], unique=True)

    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=100), server_default="", nullable=False),
        sa.Column("email_confirmed_at", sa.DateTime(), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column(
            "first_name", sa.String(length=120), server_default="", nullable=False
        ),
        sa.Column(
            "second_name", sa.String(length=120), server_default="", nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), server_default="1", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "portfolio",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currency.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trade",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("portfolio_id", sa.Integer(), nullable=False),
        sa.Column("currency_id", sa.Integer(), nullable=False),
        sa.Column("security_id", sa.Integer(), nullable=False),
        sa.Column(
            "trade_type", sa.Enum("buy", "sell", name="tradetype"), nullable=False
        ),
        sa.Column("trade_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("unit_price", sa.Float(precision=2), nullable=False),
        sa.Column("quantity", sa.Float(precision=2), nullable=False),
        sa.Column("brokerage_fee", sa.Float(precision=2), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["currency_id"],
            ["currency.id"],
        ),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolio.id"],
        ),
        sa.ForeignKeyConstraint(
            ["security_id"],
            ["security.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###

    # ### seed database ###
    op.bulk_insert(
        currency_table,
        [
            {"id": 1, "code": "USD", "name": "Unites States dollar", "symbol": "$"},
            {"id": 2, "code": "EUR", "name": "Euro", "symbol": "€"},
            {"id": 3, "code": "RUB", "name": "Russian Ruble", "symbol": "₽"},
            {"id": 4, "code": "GBP", "name": "Pound sterling", "symbol": "£"},
        ],
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trade")
    op.drop_table("portfolio")
    op.drop_table("user")
    with op.batch_alter_table("security", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_security_symbol"))

    op.drop_table("security")
    op.drop_table("currency")
    # ### end Alembic commands ###
